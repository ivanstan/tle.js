!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.Tle=t():e.Tle=t()}(window,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);class r{constructor(e){this.satelliteId=e.satelliteId,this.name=e.name,this.line1=e.line1,this.line2=e.line2}getDate(){let e=parseInt(this.line1.substring(18,20));e=r.formatYear(e);let t=parseFloat(this.line1.substring(20,32)),n=Math.floor(t),o=new Date(Date.UTC(e,0,n)),i=Math.round(t-n);i*=24;let u=Math.round(i);i-=u,i*=60;let s=Math.round(i);i-=s,i*=60;let l=Math.round(i);i-=l,i*=1e3;let a=Math.round(i);return o.setUTCHours(u),o.setUTCMinutes(s),o.setUTCSeconds(l),o.setUTCMilliseconds(a),o}static formatYear(e){return e+=e<57?2e3:1900}get meanMotion(){return Number(this.line2.substring(52,63))}get orbitalPeriod(){return 86400/this.meanMotion}}n.d(t,"Tle",function(){return r});t.default=class{constructor(){this.URL="https://ivanstanojevic.me/api/tle"}search(e){return new Promise((t,n)=>{fetch(`${this.URL}?search=${e}`).then(e=>e.json()).then(e=>{let n=[];e.member&&e.member.map(e=>{n.push(new r(e))}),t(n)}).catch(e=>{n(e)})})}}}])});